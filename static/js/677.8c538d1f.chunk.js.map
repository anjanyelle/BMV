{"version":3,"file":"static/js/677.8c538d1f.chunk.js","mappings":"2NAoGaA,EAAgB,SAACC,GAE5B,OAAKA,GAAUA,EAAMC,MADF,8BAIZ,KAFE,oCAGX,E,oBCHA,EAlGwB,WACtB,IAAAC,GAA0BC,EAAAA,EAAAA,UAAS,CACjCC,QAAS,GACTC,MAAO,GACPC,KAAM,CAAC,IACPC,GAAAC,EAAAA,EAAAA,GAAAN,EAAA,GAJKF,EAAKO,EAAA,GAAEE,EAAQF,EAAA,GAchBG,EAAmB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC0B,KAA9CL,EAAaM,EAAkBtB,EAAMI,UAC5B,CAADe,EAAAE,KAAA,QAIT,OAHHZ,GAAQc,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACLvB,GAAK,IACRK,MAAOW,KACNG,EAAAK,OAAA,iBAGL,IACQP,GAAeQ,EAAAA,EAAAA,IAAazB,EAAMI,SACxCsB,iBAAiBC,cACjBC,UAAQL,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACLvB,GAAK,IACRM,KAAMW,IAEV,CAAE,MAAOZ,GACPuB,UAAQL,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACLvB,GAAK,IACRK,MAAOA,IAEX,CAAC,wBAAAc,EAAAU,OAAA,GAAAd,EAAA,KACF,kBAtBwB,OAAAJ,EAAAmB,MAAA,KAAAC,UAAA,KAuBzB,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,0BAAyBD,UACtCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gBAAeD,UAC5BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWD,UACxBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,WAAUD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACzBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAYE,IAAKC,EAAAA,GAAOC,IAAI,YAE7CP,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cAAaD,UAC1BE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,mBAAkBD,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oBACJF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,mBAAkBD,SAAC,qBAEhCE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,aAAYD,SAAA,EACzBE,EAAAA,EAAAA,MAAA,SAAAF,SAAA,CAAO,uCAELF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,eAAcD,SAAC,UAEjCF,EAAAA,EAAAA,KAAA,SACEG,UAAU,eACVK,KAAK,OACLC,KAAK,UACLC,SAtDC,SAACC,GACpB,IAAAC,EAAwBD,EAAME,OAAtBJ,EAAIG,EAAJH,KAAMK,EAAKF,EAALE,MACdrC,GAAQc,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACLvB,GAAK,IAAA+C,EAAAA,EAAAA,GAAA,GACPN,EAAOK,IAEZ,KAkDkBd,EAAAA,EAAAA,KAAA,QAAMG,UAAU,gBAAeD,UAC7BF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,yBAGhBnC,EAAMK,QACL2B,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,SAAElC,EAAMK,SAEvC2B,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACzBF,EAAAA,EAAAA,KAAA,UACEG,UAAU,4BACVK,KAAK,SACLQ,QAAStC,EAAoBwB,SAC9B,yBAIHF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,mCAiBjC,C","sources":["components/pages/Authentication/api.js","components/pages/Authentication/ForgotPassword3.jsx"],"sourcesContent":["import axios from \"axios\";\r\nconst API_BASE_URL =\r\n  \"http://ec2-15-207-239-145.ap-south-1.compute.amazonaws.com:8080/oxyloans/v1/\";\r\nconst API_URL =\r\n  \"http://ec2-15-207-239-145.ap-south-1.compute.amazonaws.com:8080/oxyloans/v1/user/login?grantType=PWD\";\r\nconst API_URL_otp =\r\n  \"http://ec2-15-207-239-145.ap-south-1.compute.amazonaws.com:8080/oxyloans/v1/user/sendOtp\";\r\n// Function to perform the login API request\r\nexport const loginUser = async (email, password, dataIpv4, dataIpv6) => {\r\n  var data = {\r\n    password: password,\r\n    email: email,\r\n    ipAddress: dataIpv4,\r\n    ipAddressResponse: dataIpv6,\r\n    loginType: \"WEB\",\r\n  };\r\n  try {\r\n    const response = await axios.post(API_URL, data, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const accessTokenFromHeader = response.headers[\"accesstoken\"];\r\n    localStorage.setItem(\"token\", accessTokenFromHeader);\r\n\r\n    if (!accessTokenFromHeader) {\r\n      throw new Error(\"Access token not found in response headers\");\r\n    }\r\n\r\n    return {\r\n      accessToken: accessTokenFromHeader,\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const validateInput = (email, password) => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  if (!email || !email.match(emailRegex)) {\r\n    return \"Please enter a valid email address\";\r\n  }\r\n\r\n  if (!password || password.length < 6) {\r\n    return \"Password must be at least 6 characters long\";\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const sendotpemail = async (email) => {\r\n  var data = {\r\n    email: email,\r\n  };\r\n  try {\r\n    const response = await axios.post(\r\n      API_BASE_URL + \"user/resetpassword\",\r\n      data,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    return {\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const verifypannumber = async (pannumber, address, time, id, date) => {\r\n  var data = {\r\n    address: address,\r\n    dob: date,\r\n    panNumber: pannumber,\r\n    timeInMilliSeconds: time,\r\n    userId: id,\r\n  };\r\n  try {\r\n    const response = await axios.post(\r\n      API_BASE_URL + \"user/emailVerification\",\r\n      data,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    return {\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const vaildateemail = (email) => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  if (!email || !email.match(emailRegex)) {\r\n    return \"Please enter a valid email address\";\r\n  }\r\n  return null;\r\n};\r\nexport const validateRegisterInput = (email, password, moblie) => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  if (!email || !email.match(emailRegex)) {\r\n    return \"Please enter a valid email address\";\r\n  }\r\n\r\n  if (!password || password.length < 6) {\r\n    return \"Password must be at least 6 characters long\";\r\n  }\r\n\r\n  const phoneNumberRegex = /^\\d{10}$/;\r\n  if (!moblie || !moblie.match(phoneNumberRegex)) {\r\n    return \"Please enter a valid 10-digit phone number\";\r\n  }\r\n\r\n  return null; // No validation error\r\n};\r\n\r\nexport const validatemoblie = (moblie) => {\r\n  const phoneNumberRegex = /^\\d{10}$/;\r\n  if (!moblie || !moblie.match(phoneNumberRegex)) {\r\n    return \"Please enter a valid 10-digit phone number\";\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const moblieloginotp = async (moblie) => {\r\n  var data = {\r\n    mobileNumber: moblie,\r\n  };\r\n  try {\r\n    const response = await axios.post(API_URL_otp, data);\r\n    return {\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const validateotpsubmit = async (moblie, otp) => {\r\n  var data = {\r\n    mobileNumber: moblie,\r\n    mobileOtpValue: otp,\r\n  };\r\n  try {\r\n    const response = await axios.post(\r\n      \"http://ec2-13-127-118-128.ap-south-1.compute.amazonaws.com:8080/oxyloans/v1/user/login?grantType=PWD\",\r\n      data,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    return {\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const RegisterUser = async (moblie) => {\r\n  var data = {\r\n    citizenship: \"NONNRI\",\r\n    mobileNumber: moblie,\r\n  };\r\n  try {\r\n    const response = await axios.post(\r\n      API_BASE_URL + \"user/newUserRegistration\",\r\n      data\r\n    );\r\n    return response.data.mobileOtpSession;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n// a\r\n\r\nexport const vaildateotp = async (\r\n  email,\r\n  moblie,\r\n  otp_data,\r\n  name,\r\n  password,\r\n  session,\r\n  referrerId\r\n) => {\r\n  if (referrerId === \"\") {\r\n    var data = {\r\n      mobileNumber: moblie,\r\n      mobileOtpSession: session,\r\n      mobileOtpValue: otp_data,\r\n      primaryType: \"LENDER\",\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n      citizenship: \"NONNRI\",\r\n      uniqueNumber: 0,\r\n      utm: \"WEB\",\r\n      uuid: \"asdfghjkl\",\r\n    };\r\n  } else {\r\n    var data = {\r\n      mobileNumber: moblie,\r\n      mobileOtpSession: session,\r\n      mobileOtpValue: otp_data,\r\n      primaryType: \"LENDER\",\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n      citizenship: \"NONNRI\",\r\n      uniqueNumber: 0,\r\n      utm: \"WEB\",\r\n      uuid: \"asdfghjkl\",\r\n    };\r\n  }\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      API_BASE_URL + \"user/newUserRegistration\",\r\n      data\r\n    );\r\n    return {\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { login } from \"../../imagepath\";\r\nimport * as api from \"./api\";\r\nimport { sendotpemail } from \"../../HttpRequest/beforelogin\";\r\n\r\nconst ForgotPassword3 = () => {\r\n  const [email, setemail] = useState({\r\n    emailid: \"\",\r\n    error: \"\",\r\n    data: {},\r\n  });\r\n\r\n  const handlechange = (event) => {\r\n    const { name, value } = event.target;\r\n    setemail({\r\n      ...email,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleresetpassword = async () => {\r\n    const vaildatebu = api.vaildateemail(email.emailid);\r\n    if (vaildatebu) {\r\n      setemail({\r\n        ...email,\r\n        error: vaildatebu,\r\n      });\r\n      return;\r\n    }\r\n    try {\r\n      const sendOtpEmail = sendotpemail(email.emailid);\r\n      setemailisvaild(!emailisvaild);\r\n      setEmail({\r\n        ...email,\r\n        data: sendOtpEmail,\r\n      });\r\n    } catch (error) {\r\n      setEmail({\r\n        ...email,\r\n        error: error,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"main-wrapper login-body\">\r\n        <div className=\"login-wrapper\">\r\n          <div className=\"container\">\r\n            <div className=\"loginbox\">\r\n              <div className=\"login-left\">\r\n                <img className=\"img-fluid\" src={login} alt=\"Logo\" />\r\n              </div>\r\n              <div className=\"login-right\">\r\n                <div className=\"login-right-wrap\">\r\n                  <h1>Reset Password</h1>\r\n                  <p className=\"account-subtitle\">Let Us Help You</p>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      Enter your registered email address\r\n                      <span className=\"login-danger\">*</span>\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"emailid\"\r\n                      onChange={handlechange}\r\n                    />\r\n                    <span className=\"profile-views\">\r\n                      <i className=\"fas fa-envelope\" />\r\n                    </span>\r\n                  </div>\r\n                  {email.error && (\r\n                    <div className=\"errormessage\">{email.error}</div>\r\n                  )}\r\n                  <div className=\"form-group\">\r\n                    <button\r\n                      className=\"btn btn-primary btn-block\"\r\n                      type=\"submit\"\r\n                      onClick={handleresetpassword}\r\n                    >\r\n                      Reset My Password\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"form-group mb-0\">\r\n                    {/* <button\r\n                      className=\"btn btn-primary primary-reset btn-block\"\r\n                      type=\"submit\"\r\n                      onClick=\"./admindashboard\"\r\n                    >\r\n                      Login\r\n                    </button> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword3;\r\n"],"names":["vaildateemail","email","match","_useState","useState","emailid","error","data","_useState2","_slicedToArray","setemail","handleresetpassword","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","vaildatebu","sendOtpEmail","wrap","_context","prev","next","api","_objectSpread","abrupt","sendotpemail","setemailisvaild","emailisvaild","setEmail","stop","apply","arguments","_jsx","_Fragment","children","className","_jsxs","src","login","alt","type","name","onChange","event","_event$target","target","value","_defineProperty","onClick"],"sourceRoot":""}